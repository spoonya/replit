{"version":3,"sources":["assets/img/rss.png","assets/img/intro.png","app/components/home/Footer.tsx","app/constants/project.constant.ts","app/helpers/options.helper.ts","app/components/home/getStarted/GetStarted.tsx","app/layout/Logo.tsx","app/components/home/Header.tsx","app/components/home/Home.tsx","app/components/Page404.tsx","app/components/project/console/Console.jsx","app/constants/options.constant.ts","app/constants/theme.constant.ts","app/components/project/info/LineColumn.tsx","app/components/project/editor/CodeEditor.tsx","app/components/project/editor/example/buttons.ts","app/components/project/header/Header.tsx","app/components/project/iframe/Iframe.tsx","app/components/project/info/Info.tsx","app/components/project/common/CommonTooltip.ts","app/components/project/sidebar/OpenSettings.tsx","app/components/project/panels/settings/fontSize/FontSize.tsx","app/components/project/panels/settings/indentSize/IndentSize.tsx","app/components/project/panels/settings/localization/Language.tsx","styles/styledComponents/dynamicStyles.ts","app/components/project/panels/settings/themes/Toggle.tsx","app/components/project/panels/settings/themes/ToggleTheme.tsx","app/components/project/panels/settings/themes/useThemes.ts","app/components/project/panels/settings/Settings.tsx","app/components/project/panels/Panels.tsx","app/components/project/sidebar/LinkField.tsx","app/components/project/sidebar/ShareLink.tsx","app/components/project/sidebar/Sidebar.tsx","app/components/project/useStorage.ts","app/components/project/Project.tsx","app/App.tsx","app/localization/i18n.ts","index.tsx"],"names":["module","exports","Footer","className","rel","href","target","src","require","alt","PROJECT","title","defaultVal","value","storage","html","css","storageName","js","getStorage","window","localStorage","getItem","setStorage","setItem","useStyles","makeStyles","createButton","fontSize","textFieldStyles","theme","createStyles","root","padding","spacing","width","DialogTitle","withStyles","styles","margin","closeButton","position","right","top","color","palette","grey","props","children","classes","onClose","other","disableTypography","Typography","variant","IconButton","aria-label","onClick","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","GetStarted","t","useTranslation","React","useState","open","setOpen","setTitle","handleClose","textFieldClasses","handleClickOpen","Dialog","aria-labelledby","id","dividers","TextField","InputProps","style","InputLabelProps","label","onInput","handleTitleChange","e","Button","autoFocus","handleStart","location","Logo","withHomeLink","to","LogoHtml","Header","Home","Page404","Console","output","logs","setLogs","useEffect","Hook","console","log","currLogs","Unhook","clear","OPTIONS","light","dark","darkTheme","lightTheme","indentSize","defaultValue","values","twoSpaces","fourSpaces","small","normal","large","huge","language","ru","en","uk","backend","host","alpha","beta","gamma","psi","omega","divider","alphaDarken","editorLine","editorLineNum","infoPosition","line","createRef","col","LineColumn","ref","editorRef","editorRefArray","CodeEditor","onChanged","displayingName","useRef","onChange","handleChange","options","minimap","enabled","tabSize","wordWrap","wordWrapColumn","formatOnPaste","formatOnType","beforeMount","handleEditorWillMount","monaco","editor","defineTheme","base","inherit","rules","colors","onMount","handleEditorDidMount","current","push","dispose","emmetHTML","emmetCSS","onDidChangeCursorPosition","cursorCoords","getPosition","innerText","lineNumber","column","BUTTONS","Iframe","srcDoc","sandbox","frameBorder","Info","GrayTooltip","arrow","tooltip","backgroundColor","boxShadow","shadows","Tooltip","visibleSettingsRef","OpenSettings","visible","setVisible","firstRender","setVisibleSettingsRef","formControl","minWidth","selectEmpty","marginTop","common","FontSize","localFontSize","setFontSize","FormControl","InputLabel","shrink","Select","event","forEach","item","updateOptions","toString","displayEmpty","MenuItem","IndentSize","localIndentSize","setIndentSize","Language","i18n","changeLanguage","lang","ThemifiedStyles","createGlobalStyle","BlueSwitch","switchBase","checked","track","Switch","Toggle","toggleTheme","isChecked","checkedA","checkedB","checkedC","state","setState","FormGroup","FormControlLabel","control","name","ToggleTheme","useThemes","setTheme","toggleEditorTheme","loader","init","then","localTheme","themeMode","Explorer","Slide","direction","in","display","Panels","BasicTextFields","noValidate","autoComplete","readOnly","copyButton","ShareLink","copyUrl","navigator","clipboard","writeText","Sidebar","useStorage","projectJson","JSON","parse","setValue","stringify","Project","setHtml","setCss","setJs","setSrcDoc","timeout","setTimeout","clearTimeout","split","defaultSizes","minSize","App","path","exact","component","lng","fallbackLng","ns","defaultNS","interpolation","escapeValue","formatSeparator","returnObjects","react","wait","resources","translations","slogan","code","create","collaborate","descrip","startDialog","start","getStarted","tooltips","sidebar","compile","explorer","share","settings","menu","newFile","newFolder","btn","general","variants","ReactDOM","render","I18nextProvider","document","getElementById"],"mappings":"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","file":"static/js/main.5b72deb1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rss.529f9772.png\";","module.exports = __webpack_public_path__ + \"static/media/intro.c88b0e95.png\";","import React from 'react';\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <div className=\"container\">\r\n        <address className=\"footer__info\">\r\n          &copy; 2021 Code.it by\r\n          <a className=\"footer__link\" rel=\"noopener noreferrer\" href=\"https://github.com/spoonya\" target=\"_blank\">\r\n            spoonya\r\n          </a>\r\n          ,\r\n          <a className=\"footer__link\" rel=\"noopener noreferrer\" href=\"https://github.com/ortophius\" target=\"_blank\">\r\n            ortophius\r\n          </a>\r\n          for\r\n          <a href=\"https://rs.school/js/\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n            <img className=\"footer__img\" src={require('../../../assets/img/rss.png')} alt=\"The Rolling Scopes School\" />\r\n          </a>\r\n        </address>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n","interface Project {\n  readonly title: {\n    defaultVal: string;\n    value: string;\n    storage: string;\n  };\n  readonly html: {\n    value: string;\n    storage: string;\n  };\n  readonly css: {\n    value: string;\n    storageName: string;\n  };\n  readonly js: {\n    value: string;\n    storage: string;\n  };\n}\n\nexport const PROJECT: Project = {\n  title: {\n    defaultVal: 'Untitled',\n    value: '',\n    storage: 'codeit-title'\n  },\n  html: {\n    value: '',\n    storage: 'codeit-html'\n  },\n  css: {\n    value: '',\n    storageName: 'codeit-css'\n  },\n  js: {\n    value: '',\n    storage: 'codeit-js'\n  }\n};\n","export const getStorage = (storageName: string): string => {\r\n  return window.localStorage.getItem(storageName);\r\n};\r\n\r\nexport const setStorage = (storageName: string, value: string) => {\r\n  return window.localStorage.setItem(storageName, value);\r\n};\r\n","import { makeStyles, TextField } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { PROJECT } from '~/app/constants/project.constant';\r\nimport { setStorage } from '~/app/helpers/options.helper';\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      margin: 0,\r\n      padding: theme.spacing(2)\r\n    },\r\n    closeButton: {\r\n      position: 'absolute',\r\n      right: theme.spacing(1),\r\n      top: theme.spacing(1),\r\n      color: theme.palette.grey[500]\r\n    }\r\n  });\r\n\r\nconst useStyles = makeStyles({\r\n  createButton: {\r\n    fontSize: '1.7rem'\r\n  }\r\n});\r\n\r\nconst textFieldStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      fontSize: '1.8rem',\r\n      padding: theme.spacing(1),\r\n      width: '100%'\r\n    }\r\n  })\r\n);\r\n\r\nexport interface DialogTitleProps extends WithStyles<typeof styles> {\r\n  id: string;\r\n  children: React.ReactNode;\r\n  onClose: () => void;\r\n}\r\n\r\nconst DialogTitle = withStyles(styles)((props: DialogTitleProps) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h4\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme: Theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2)\r\n  }\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme: Theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1)\r\n  }\r\n}))(MuiDialogActions);\r\n\r\nexport default function GetStarted() {\r\n  const { t } = useTranslation();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [title, setTitle] = React.useState(PROJECT.title.defaultVal);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleTitleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setTitle(e.target.value);\r\n    PROJECT.title.value = e.target.value;\r\n  };\r\n\r\n  const handleStart = () => {\r\n    window.location.href = '/project';\r\n    setStorage(PROJECT.title.storage, PROJECT.title.value);\r\n  };\r\n\r\n  const classes = useStyles();\r\n  const textFieldClasses = textFieldStyles();\r\n\r\n  return (\r\n    <div>\r\n      <button className=\"intro__start\" onClick={handleClickOpen}>\r\n        {t('startDialog.start')}\r\n      </button>\r\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n          {t('startDialog.getStarted')}\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <TextField\r\n            InputProps={{ style: { fontSize: '1.8rem' } }}\r\n            InputLabelProps={{ style: { fontSize: '1.8rem', padding: '8px' } }}\r\n            className={textFieldClasses.root}\r\n            label={t('startDialog.title')}\r\n            value={title}\r\n            onInput={handleTitleChange}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button className={classes.createButton} autoFocus onClick={handleStart} color=\"primary\">\r\n            {t('startDialog.create')}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Logo({ withHomeLink = false }) {\r\n  if (withHomeLink) {\r\n    return (\r\n      <>\r\n        <Link to=\"/\">{LogoHtml()}</Link>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return <>{LogoHtml()}</>;\r\n}\r\n\r\nfunction LogoHtml() {\r\n  return (\r\n    <h1 className=\"header__logo\">\r\n      &lt;Code/<span>it</span>&gt;\r\n    </h1>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Logo from '../../layout/Logo';\r\n\r\nexport default function Header({ withHomeLink = false }) {\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"container\">\r\n        <div className=\"header__inner\">\r\n          <Logo withHomeLink={withHomeLink} />\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport Footer from './Footer';\r\nimport GetStarted from './getStarted/GetStarted';\r\nimport Header from './Header';\r\n\r\nexport default function Home() {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"intro\">\r\n        <div className=\"container\">\r\n          <div className=\"intro__content\">\r\n            <div className=\"intro__inner\">\r\n              <h2 className=\"intro__title\">\r\n                <span>{t('slogan.code')}</span>\r\n                <span>{t('slogan.create')}</span>\r\n                <span>{t('slogan.collaborate')}</span>\r\n              </h2>\r\n              <img className=\"intro__img\" src={require('../../../assets/img/intro.png')} alt=\"Coding\" />\r\n            </div>\r\n            <h3 className=\"intro__subtitle\">{t('descrip')}</h3>\r\n          </div>\r\n          <GetStarted />\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Footer from './home/Footer';\nimport Header from './home/Header';\n\nexport default function Page404() {\n  return (\n    <>\n      <Header withHomeLink={true} />\n      <div className=\"not-found\">\n        <h2 className=\"not-found__title\">\n          <span>404</span>Page Not Found\n        </h2>\n        <Link to=\"/\">\n          <span className=\"not-found__home\">Go Home</span>\n        </Link>\n      </div>\n      <Footer />\n    </>\n  );\n}\n","import { Console as ConsoleFeed, Hook, Unhook } from 'console-feed';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nexport default function Console({ output }) {\r\n  const [logs, setLogs] = useState([]);\r\n\r\n  const onInput = () => {\r\n    // setLogs(logs);\r\n    // console.log(logs[logs.length - 1]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    onInput();\r\n  }, [output]);\r\n\r\n  useEffect(() => {\r\n    Hook(window.console, (log) => setLogs((currLogs) => [...currLogs, log]), false);\r\n\r\n    return () => Unhook(window.console);\r\n  }, []);\r\n\r\n  const clear = () => {\r\n    // setLogs();\r\n    setLogs(logs);\r\n  };\r\n\r\n  return (\r\n    <div className=\"console-wrapper\">\r\n      <div className=\"console__header\">\r\n        <h4 className=\"console__title\">Console</h4>\r\n        <div className=\"console__btns\">\r\n          <button className=\"console__btn\" onClick={clear}>\r\n            Clear\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"console__inner\">\r\n        <ConsoleFeed logs={logs} variant=\"dark\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","interface Options {\r\n  readonly themes: {\r\n    readonly storage: string;\r\n    readonly light: string;\r\n    readonly dark: string;\r\n    readonly darkTheme: string;\r\n    readonly lightTheme: string;\r\n  };\r\n  readonly settings: {\r\n    readonly indentSize: {\r\n      readonly defaultValue: number;\r\n      readonly values: {\r\n        readonly twoSpaces: number;\r\n        readonly fourSpaces: number;\r\n      };\r\n      readonly storage: string;\r\n    };\r\n    readonly fontSize: {\r\n      readonly defaultValue: number;\r\n      readonly values: {\r\n        readonly small: number;\r\n        readonly normal: number;\r\n        readonly large: number;\r\n        readonly huge: number;\r\n      };\r\n      readonly storage: string;\r\n    };\r\n    readonly language: {\r\n      readonly defaultValue: string;\r\n      readonly values: {\r\n        readonly ru: string;\r\n        readonly en: string;\r\n        readonly uk: string;\r\n      };\r\n      readonly storage: string;\r\n    };\r\n    readonly backend: {\r\n      host: string;\r\n    };\r\n  };\r\n}\r\n\r\nexport const OPTIONS: Options = {\r\n  themes: {\r\n    storage: 'codeit-theme',\r\n    light: 'light',\r\n    dark: 'dark',\r\n    darkTheme: 'darkTheme',\r\n    lightTheme: 'lightTheme'\r\n  },\r\n  settings: {\r\n    indentSize: {\r\n      defaultValue: 2,\r\n      values: {\r\n        twoSpaces: 2,\r\n        fourSpaces: 4\r\n      },\r\n      storage: 'codeit-indentSize'\r\n    },\r\n    fontSize: {\r\n      defaultValue: 14,\r\n      values: {\r\n        small: 10,\r\n        normal: 14,\r\n        large: 18,\r\n        huge: 24\r\n      },\r\n      storage: 'codeit-fontSize'\r\n    },\r\n    language: {\r\n      defaultValue: 'en-EN',\r\n      values: {\r\n        ru: 'ru-RU',\r\n        en: 'en-EN',\r\n        uk: 'uk-UA'\r\n      },\r\n      storage: 'codeit-localization'\r\n    },\r\n    backend: {\r\n      host: 'http://localhost:8081'\r\n    }\r\n  }\r\n};\r\n","export interface Theme {\r\n  readonly alpha: string;\r\n  readonly alphaDarken: string;\r\n  readonly beta: string;\r\n  readonly gamma: string;\r\n  readonly psi: string;\r\n  readonly omega: string;\r\n  readonly divider: string;\r\n  readonly editorLine: string;\r\n  readonly editorLineNum?: string;\r\n}\r\n\r\nexport const darkTheme: Theme = {\r\n  alpha: '#fff',\r\n  beta: '#282c34',\r\n  gamma: '#21252b',\r\n  psi: '#485fe0',\r\n  omega: '#000',\r\n  divider: '#151515',\r\n  alphaDarken: '#cfcfcf',\r\n  editorLine: '#333842'\r\n};\r\n\r\nexport const lightTheme: Theme = {\r\n  alpha: '#38434f',\r\n  beta: '#f9f9fa',\r\n  gamma: '#eff0f2',\r\n  psi: '#485fe0',\r\n  omega: '#000',\r\n  divider: '#d2d2d2',\r\n  editorLine: '#ececec',\r\n  alphaDarken: '#656565',\r\n  editorLineNum: '#a7a7a7'\r\n};\r\n","import React, { createRef, RefObject } from 'react';\r\n\r\ninterface Position {\r\n  readonly line: RefObject<HTMLSpanElement>;\r\n  readonly col: RefObject<HTMLSpanElement>;\r\n}\r\n\r\nexport const infoPosition: Position = {\r\n  line: createRef(),\r\n  col: createRef()\r\n};\r\n\r\nexport default function LineColumn() {\r\n  return (\r\n    <p className=\"info__item\">\r\n      Ln <span ref={infoPosition.line}>1</span>, Col <span ref={infoPosition.col}>1</span>\r\n    </p>\r\n  );\r\n}\r\n","import Editor, { Monaco } from '@monaco-editor/react';\r\nimport { emmetCSS, emmetHTML } from 'emmet-monaco-es';\r\nimport React, { Dispatch, MutableRefObject, SetStateAction, useRef } from 'react';\r\nimport { OPTIONS } from '~/app/constants/options.constant';\r\nimport { darkTheme, lightTheme } from '~/app/constants/theme.constant';\r\nimport { getStorage } from '~/app/helpers/options.helper';\r\nimport { infoPosition } from '../info/LineColumn';\r\n\r\nlet editorRef: MutableRefObject<any> | null = null;\r\nexport const editorRefArray: Array<MutableRefObject<any>> = [];\r\n\r\ninterface CodeEditorProps {\r\n  language: string;\r\n  value: string;\r\n  onChanged: Dispatch<SetStateAction<string>>;\r\n  displayingName: string;\r\n}\r\n\r\nexport default function CodeEditor(props: CodeEditorProps) {\r\n  const { language, value, onChanged, displayingName } = props;\r\n\r\n  editorRef = useRef(null);\r\n\r\n  const handleEditorWillMount = (monaco: Monaco) => {\r\n    monaco.editor.defineTheme(OPTIONS.themes.darkTheme, {\r\n      base: 'vs-dark',\r\n      inherit: true,\r\n      rules: [],\r\n      colors: {\r\n        'editor.background': `${darkTheme.beta}`,\r\n        'editor.lineHighlightBackground': `${darkTheme.editorLine}`,\r\n        'dropdown.background': `${darkTheme.gamma}`,\r\n        'editorWidget.background': `${darkTheme.gamma}`\r\n      }\r\n    });\r\n\r\n    monaco.editor.defineTheme(OPTIONS.themes.lightTheme, {\r\n      base: 'vs',\r\n      inherit: true,\r\n      rules: [],\r\n      colors: {\r\n        'editor.background': `${lightTheme.beta}`,\r\n        'editor.lineHighlightBackground': `${lightTheme.editorLine}`,\r\n        'editorLineNumber.foreground': `${lightTheme.editorLineNum}`,\r\n        'editorCursor.foreground': `${lightTheme.alpha}`,\r\n        'dropdown.background': `${lightTheme.gamma}`,\r\n        'editorWidget.background': `${lightTheme.gamma}`\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleEditorDidMount = (editor: any, monaco: Monaco) => {\r\n    editorRef.current = editor;\r\n    editorRefArray.push(editorRef.current);\r\n\r\n    const dispose = () => {\r\n      emmetHTML(monaco);\r\n      emmetCSS(monaco);\r\n    };\r\n\r\n    dispose();\r\n\r\n    editor.onDidChangeCursorPosition(() => {\r\n      const cursorCoords = editor.getPosition();\r\n      infoPosition.line.current.innerText = cursorCoords.lineNumber;\r\n      infoPosition.col.current.innerText = cursorCoords.column;\r\n    });\r\n  };\r\n\r\n  const handleChange = (value: string): any => {\r\n    onChanged(value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"editor\">\r\n      <div className=\"editor__header\">\r\n        <h4 className=\"editor__title\">{displayingName}</h4>\r\n      </div>\r\n      <Editor\r\n        className=\"editor__content\"\r\n        language={language}\r\n        value={value}\r\n        onChange={handleChange}\r\n        theme={\r\n          getStorage(OPTIONS.themes.storage) === OPTIONS.themes.light\r\n            ? OPTIONS.themes.lightTheme\r\n            : OPTIONS.themes.darkTheme\r\n        }\r\n        options={{\r\n          minimap: {\r\n            enabled: false\r\n          },\r\n          tabSize: +getStorage(OPTIONS.settings.indentSize.storage) || OPTIONS.settings.indentSize.defaultValue,\r\n          fontSize: +getStorage(OPTIONS.settings.fontSize.storage) || OPTIONS.settings.fontSize.defaultValue,\r\n          wordWrap: 'bounded',\r\n          wordWrapColumn: 80,\r\n          formatOnPaste: true,\r\n          formatOnType: true\r\n        }}\r\n        beforeMount={handleEditorWillMount}\r\n        onMount={handleEditorDidMount}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","export const BUTTONS = {\n  html: `<button class=\"cybr-btn\">\n    Cyber<span aria-hidden>_</span>\n    <span aria-hidden class=\"cybr-btn__glitch\">Cyber_</span>\n    <span aria-hidden class=\"cybr-btn__tag\">R25</span>\n  </button>\n  <button class=\"cybr-btn\">\n    Buttons<span aria-hidden>_</span>\n    <span aria-hidden class=\"cybr-btn__glitch\">Buttons_</span>\n    <span aria-hidden class=\"cybr-btn__tag\">R25</span>\n  </button>`,\n  css: `@font-face {\n  font-family: Cyber;\n  src: url(\"https://assets.codepen.io/605876/Blender-Pro-Bold.otf\");\n  font-display: swap;\n}\n\n* {\n  box-sizing: border-box;\n}\n\nbody {\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  justify-content: center;\n  min-height: 100vh;\n  font-family: 'Cyber', sans-serif;\n}\n\nbody .cybr-btn + .cybr-btn {\n  margin-top: 2rem;\n}\n\n.cybr-btn {\n  --primary: hsl(var(--primary-hue), 85%, calc(var(--primary-lightness, 50) * 1%));\n  --shadow-primary: hsl(var(--shadow-primary-hue), 90%, 50%);\n  --primary-hue: 0;\n  --primary-lightness: 50;\n  --color: hsl(0, 0%, 100%);\n  --font-size: 26px;\n  --shadow-primary-hue: 180;\n  --label-size: 9px;\n  --shadow-secondary-hue: 60;\n  --shadow-secondary: hsl(var(--shadow-secondary-hue), 90%, 60%);\n  --clip: polygon(0 0, 100% 0, 100% 100%, 95% 100%, 95% 90%, 85% 90%, 85% 100%, 8% 100%, 0 70%);\n  --border: 4px;\n  --shimmy-distance: 5;\n  --clip-one: polygon(0 2%, 100% 2%, 100% 95%, 95% 95%, 95% 90%, 85% 90%, 85% 95%, 8% 95%, 0 70%);\n  --clip-two: polygon(0 78%, 100% 78%, 100% 100%, 95% 100%, 95% 90%, 85% 90%, 85% 100%, 8% 100%, 0 78%);\n  --clip-three: polygon(0 44%, 100% 44%, 100% 54%, 95% 54%, 95% 54%, 85% 54%, 85% 54%, 8% 54%, 0 54%);\n  --clip-four: polygon(0 0, 100% 0, 100% 0, 95% 0, 95% 0, 85% 0, 85% 0, 8% 0, 0 0);\n  --clip-five: polygon(0 0, 100% 0, 100% 0, 95% 0, 95% 0, 85% 0, 85% 0, 8% 0, 0 0);\n  --clip-six: polygon(0 40%, 100% 40%, 100% 85%, 95% 85%, 95% 85%, 85% 85%, 85% 85%, 8% 85%, 0 70%);\n  --clip-seven: polygon(0 63%, 100% 63%, 100% 80%, 95% 80%, 95% 80%, 85% 80%, 85% 80%, 8% 80%, 0 70%);\n  font-family: 'Cyber', sans-serif;\n  color: var(--color);\n  cursor: pointer;\n  background: transparent;\n  text-transform: uppercase;\n  font-size: var(--font-size);\n  outline: transparent;\n  letter-spacing: 2px;\n  position: relative;\n  font-weight: 700;\n  border: 0;\n  min-width: 300px;\n  height: 75px;\n  line-height: 75px;\n  transition: background 0.2s;\n}\n\n.cybr-btn:hover {\n  --primary: hsl(var(--primary-hue), 85%, calc(var(--primary-lightness, 50) * 0.8%));\n}\n.cybr-btn:active {\n  --primary: hsl(var(--primary-hue), 85%, calc(var(--primary-lightness, 50) * 0.6%));\n}\n\n.cybr-btn:after,\n.cybr-btn:before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  clip-path: var(--clip);\n  z-index: -1;\n}\n\n.cybr-btn:before {\n  background: var(--shadow-primary);\n  transform: translate(var(--border), 0);\n}\n\n.cybr-btn:after {\n  background: var(--primary);\n}\n\n.cybr-btn__tag {\n  position: absolute;\n  padding: 1px 4px;\n  letter-spacing: 1px;\n  line-height: 1;\n  bottom: -5%;\n  right: 5%;\n  font-weight: normal;\n  color: hsl(0, 0%, 0%);\n  font-size: var(--label-size);\n}\n\n.cybr-btn__glitch {\n  position: absolute;\n  top: calc(var(--border) * -1);\n  left: calc(var(--border) * -1);\n  right: calc(var(--border) * -1);\n  bottom: calc(var(--border) * -1);\n  background: var(--shadow-primary);\n  text-shadow: 2px 2px var(--shadow-primary), -2px -2px var(--shadow-secondary);\n  clip-path: var(--clip);\n  animation: glitch 2s infinite;\n  display: none;\n}\n\n.cybr-btn:hover .cybr-btn__glitch {\n  display: block;\n}\n\n.cybr-btn__glitch:before {\n  content: '';\n  position: absolute;\n  top: calc(var(--border) * 1);\n  right: calc(var(--border) * 1);\n  bottom: calc(var(--border) * 1);\n  left: calc(var(--border) * 1);\n  clip-path: var(--clip);\n  background: var(--primary);\n  z-index: -1;\n}\n\n@keyframes glitch {\n  0% {\n    clip-path: var(--clip-one);\n  }\n  2%, 8% {\n    clip-path: var(--clip-two);\n    transform: translate(calc(var(--shimmy-distance) * -1%), 0);\n  }\n  6% {\n    clip-path: var(--clip-two);\n    transform: translate(calc(var(--shimmy-distance) * 1%), 0);\n  }\n  9% {\n    clip-path: var(--clip-two);\n    transform: translate(0, 0);\n  }\n  10% {\n    clip-path: var(--clip-three);\n    transform: translate(calc(var(--shimmy-distance) * 1%), 0);\n  }\n  13% {\n    clip-path: var(--clip-three);\n    transform: translate(0, 0);\n  }\n  14%, 21% {\n    clip-path: var(--clip-four);\n    transform: translate(calc(var(--shimmy-distance) * 1%), 0);\n  }\n  25% {\n    clip-path: var(--clip-five);\n    transform: translate(calc(var(--shimmy-distance) * 1%), 0);\n  }\n  30% {\n    clip-path: var(--clip-five);\n    transform: translate(calc(var(--shimmy-distance) * -1%), 0);\n  }\n  35%, 45% {\n    clip-path: var(--clip-six);\n    transform: translate(calc(var(--shimmy-distance) * -1%));\n  }\n  40% {\n    clip-path: var(--clip-six);\n    transform: translate(calc(var(--shimmy-distance) * 1%));\n  }\n  50% {\n    clip-path: var(--clip-six);\n    transform: translate(0, 0);\n  }\n  55% {\n    clip-path: var(--clip-seven);\n    transform: translate(calc(var(--shimmy-distance) * 1%), 0);\n  }\n  60% {\n    clip-path: var(--clip-seven);\n    transform: translate(0, 0);\n  }\n  31%, 61%, 100% {\n    clip-path: var(--clip-four);\n  }\n}\n\n.cybr-btn:nth-of-type(2) {\n  --primary-hue: 260;\n}`,\n  js: `document.querySelector('body').style.backgroundColor = '#fff700'`\n};\n","import React from 'react';\r\nimport { PROJECT } from '~/app/constants/project.constant';\r\nimport { getStorage } from '~/app/helpers/options.helper';\r\nimport Logo from '../../../layout/Logo';\r\n\r\nexport default function Header() {\r\n  const value = getStorage(PROJECT.title.storage);\r\n\r\n  return (\r\n    <header className=\"header header--project\">\r\n      <div className=\"container container--wide\">\r\n        <div className=\"header__inner\">\r\n          <div className=\"header__left\">\r\n            <Logo withHomeLink={true} />\r\n            <div className=\"header__info\">\r\n              <h3 className=\"header__title\">{value || PROJECT.title.defaultVal}</h3>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n","import React from 'react';\n\ninterface IframeProps {\n  srcDoc: string;\n}\n\nexport default function Iframe({ srcDoc }: IframeProps) {\n  return (\n    <div className=\"pane-output\">\n      <iframe srcDoc={srcDoc} title=\"output\" sandbox=\"allow-scripts allow-modals allow-same-origin\" frameBorder=\"0\" />\n    </div>\n  );\n}\n","import React from 'react';\r\nimport LineColumn from './LineColumn';\r\n\r\nexport default function Info() {\r\n  return (\r\n    <div className=\"info\">\r\n      <div className=\"container container--wide\">\r\n        <div className=\"info__inner\">\r\n          <div className=\"info__left\" />\r\n          <div className=\"info__right\">\r\n            <LineColumn />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { withStyles } from '@material-ui/core/styles';\nimport { Theme } from '@material-ui/core/styles/createMuiTheme';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst GrayTooltip = withStyles((theme: Theme) => ({\n  arrow: {\n    color: '#606060'\n  },\n  tooltip: {\n    backgroundColor: '#606060',\n    color: '#fff',\n    boxShadow: theme.shadows[5],\n    fontSize: 12\n  }\n}))(Tooltip);\n\nexport default GrayTooltip;\n","import SettingsIcon from '@material-ui/icons/Settings';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport GrayTooltip from '../common/CommonTooltip';\r\nimport { setVisibleSettingsRef } from '../panels/settings/Settings';\r\n\r\nexport let visibleSettingsRef: React.MutableRefObject<any> | null = null;\r\n\r\nexport default function OpenSettings() {\r\n  const { t } = useTranslation();\r\n  const [visible, setVisible] = useState(false);\r\n  const firstRender = useRef(true);\r\n\r\n  visibleSettingsRef = useRef(visible);\r\n\r\n  useEffect(() => {\r\n    if (firstRender.current) {\r\n      firstRender.current = false;\r\n      return;\r\n    }\r\n\r\n    setVisibleSettingsRef.current(visible);\r\n  }, [visible]);\r\n\r\n  return (\r\n    <div className=\"sidebar__item\">\r\n      <button className=\"sidebar__btn\" onClick={() => setVisible(!visible)}>\r\n        <GrayTooltip title={t('tooltips.sidebar.settings')} arrow>\r\n          <SettingsIcon style={{ fontSize: 30 }} />\r\n        </GrayTooltip>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { OPTIONS } from '~/app/constants/options.constant';\r\nimport { getStorage, setStorage } from '~/app/helpers/options.helper';\r\nimport { editorRefArray } from '../../../editor/CodeEditor';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 145\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2)\r\n    },\r\n    common: {\r\n      fontSize: '1.4rem'\r\n    }\r\n  })\r\n);\r\n\r\nexport default function FontSize() {\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n  const localFontSize = +getStorage(OPTIONS.settings.fontSize.storage) || OPTIONS.settings.fontSize.defaultValue;\r\n  const [fontSize, setFontSize] = React.useState(localFontSize);\r\n\r\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    setFontSize(event.target.value as number);\r\n    editorRefArray.forEach((item: any) => item.updateOptions({ fontSize: `${event.target.value}` }));\r\n    setStorage(OPTIONS.settings.fontSize.storage, event.target.value.toString());\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel shrink>{t('settings.editor.fontSize.title')}</InputLabel>\r\n        <Select value={fontSize} onChange={handleChange} displayEmpty className={classes.selectEmpty}>\r\n          <MenuItem className={classes.common} value={OPTIONS.settings.fontSize.values.small}>\r\n            {t('settings.editor.fontSize.variants.small')}\r\n          </MenuItem>\r\n          <MenuItem className={classes.common} value={OPTIONS.settings.fontSize.values.normal}>\r\n            {t('settings.editor.fontSize.variants.normal')}\r\n          </MenuItem>\r\n          <MenuItem className={classes.common} value={OPTIONS.settings.fontSize.values.large}>\r\n            {t('settings.editor.fontSize.variants.large')}\r\n          </MenuItem>\r\n          <MenuItem className={classes.common} value={OPTIONS.settings.fontSize.values.huge}>\r\n            {t('settings.editor.fontSize.variants.huge')}\r\n          </MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n","import FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { OPTIONS } from '~/app/constants/options.constant';\r\nimport { getStorage, setStorage } from '~/app/helpers/options.helper';\r\nimport { editorRefArray } from '../../../editor/CodeEditor';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 145\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2)\r\n    },\r\n    common: {\r\n      fontSize: '1.4rem'\r\n    }\r\n  })\r\n);\r\n\r\nexport default function IndentSize() {\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n  const localIndentSize = +getStorage(OPTIONS.settings.indentSize.storage) || OPTIONS.settings.indentSize.defaultValue;\r\n  const [indentSize, setIndentSize] = React.useState(localIndentSize);\r\n\r\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    setIndentSize(event.target.value as number);\r\n    editorRefArray.forEach((item: any) => item.updateOptions({ tabSize: `${event.target.value}` }));\r\n    setStorage(OPTIONS.settings.indentSize.storage, event.target.value.toString());\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel shrink>{t('settings.editor.indentSize.title')}</InputLabel>\r\n        <Select value={indentSize} onChange={handleChange} displayEmpty className={classes.selectEmpty}>\r\n          <MenuItem className={classes.common} value={2}>\r\n            2\r\n          </MenuItem>\r\n          <MenuItem className={classes.common} value={4}>\r\n            4\r\n          </MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n","import FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { OPTIONS } from '~/app/constants/options.constant';\r\nimport { setStorage } from '~/app/helpers/options.helper';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 145\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2)\r\n    },\r\n    common: {\r\n      fontSize: '1.4rem'\r\n    }\r\n  })\r\n);\r\n\r\nexport default function Language() {\r\n  const { t, i18n } = useTranslation();\r\n\r\n  const changeLanguage = (lang: string) => {\r\n    i18n.changeLanguage(lang);\r\n  };\r\n\r\n  const classes = useStyles();\r\n  const language = i18n.language;\r\n\r\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    const { value } = event.target;\r\n    changeLanguage(value.toString());\r\n    setStorage(OPTIONS.settings.language.storage, value.toString());\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel shrink>{t('settings.general.lang')}</InputLabel>\r\n        <Select value={language} onChange={handleChange} displayEmpty className={classes.selectEmpty}>\r\n          <MenuItem className={classes.common} value={OPTIONS.settings.language.values.en}>\r\n            English\r\n          </MenuItem>\r\n          <MenuItem className={classes.common} value={OPTIONS.settings.language.values.ru}>\r\n            Русский\r\n          </MenuItem>\r\n          <MenuItem className={classes.common} value={OPTIONS.settings.language.values.uk}>\r\n            Українська\r\n          </MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n","import { createGlobalStyle } from 'styled-components';\r\nimport { Theme } from '../../app/constants/theme.constant';\r\n\r\ntype Props = {\r\n  theme: Theme;\r\n};\r\n\r\nexport const ThemifiedStyles = createGlobalStyle<Props>`\r\n  .header {\r\n    background-color: ${({ theme }) => theme.gamma};\r\n    color: ${({ theme }) => theme.alpha};\r\n\r\n    &--project {\r\n      border-bottom: 1px solid ${({ theme }) => theme.divider};\r\n  }\r\n\r\n    &__logo {\r\n      color: ${({ theme }) => theme.alpha};\r\n\r\n    span {\r\n      color: ${({ theme }) => theme.psi};\r\n      }\r\n    }\r\n  }\r\n\r\n  .content {\r\n    background-color: ${({ theme }) => theme.beta};\r\n\r\n    .ResizePanel-module_ResizeHandleHorizontal__PkS9u {\r\n      border: 2px solid ${({ theme }) => theme.beta};\r\n      background: ${({ theme }) => theme.editorLine};\r\n\r\n      span {\r\n        color: ${({ theme }) => theme.alphaDarken};\r\n        text-shadow: 1px 0 1px ${({ theme }) => theme.alpha};\r\n      }\r\n    }\r\n  }\r\n\r\n  .pane-output {\r\n    background-color: ${({ theme }) => theme.beta};\r\n  }\r\n\r\n  .sidebar {\r\n    background-color: ${({ theme }) => theme.gamma};\r\n\r\n    border-right: 1px solid ${({ theme }) => theme.divider};\r\n\r\n    &__btn {\r\n      color: ${({ theme }) => theme.alphaDarken};\r\n    }\r\n  }\r\n\r\n  .console-wrapper {\r\n    background-color: ${({ theme }) => theme.gamma};\r\n\r\n    color: ${({ theme }) => theme.alpha};\r\n\r\n    .console {\r\n      span {\r\n        color: ${({ theme }) => theme.psi};\r\n      }\r\n\r\n      input {\r\n        color: ${({ theme }) => theme.alphaDarken};\r\n      }\r\n\r\n      &__btn {\r\n        color:  ${({ theme }) => theme.alpha};\r\n        background-color: ${({ theme }) => theme.gamma};\r\n\r\n        &:hover {\r\n          background-color: ${({ theme }) => theme.alphaDarken};\r\n          color: ${({ theme }) => theme.beta};\r\n        }\r\n      }\r\n\r\n      &__header {\r\n        background-color: ${({ theme }) => theme.beta};\r\n      }\r\n    }\r\n  }\r\n\r\n  .editor {\r\n    background-color: ${({ theme }) => theme.beta};\r\n\r\n    color:  ${({ theme }) => theme.alpha};\r\n\r\n    &__title {\r\n      color:  ${({ theme }) => theme.alpha};\r\n    }\r\n\r\n  }\r\n\r\n  .explorer, .settings {\r\n    background-color: ${({ theme }) => theme.gamma};\r\n\r\n    border-right: 1px solid ${({ theme }) => theme.divider};\r\n\r\n    &__header {\r\n      border-bottom: 1px solid ${({ theme }) => theme.divider};\r\n    }\r\n\r\n    &__btn {\r\n      color: ${({ theme }) => theme.alphaDarken};\r\n    }\r\n\r\n    &__title {\r\n      color:  ${({ theme }) => theme.alpha};\r\n    }\r\n  }\r\n\r\n  .settings {\r\n    &__item-title {\r\n      color:  ${({ theme }) => theme.alpha};\r\n    }\r\n\r\n    &__subitem {\r\n      color:  ${({ theme }) => theme.alphaDarken};\r\n    }\r\n\r\n    button {\r\n      color: ${({ theme }) => theme.alpha};\r\n    }\r\n\r\n    .MuiInputBase-root {\r\n      color: ${({ theme }) => theme.alphaDarken};\r\n    }\r\n\r\n    .MuiFormLabel-root {\r\n      color: ${({ theme }) => theme.alpha};\r\n    }\r\n\r\n    .MuiInput-underline:before {\r\n      border-bottom: 1px solid ${({ theme }) => theme.alphaDarken};\r\n    }\r\n\r\n    .MuiSelect-icon {\r\n      color: ${({ theme }) => theme.alphaDarken};\r\n    }\r\n\r\n    .MuiInputBase-root:hover {\r\n      .MuiInput-underline:before {\r\n        border-bottom: 1px solid ${({ theme }) => theme.alpha};\r\n      }\r\n    }\r\n\r\n    .MuiInput-underline:hover:not(.Mui-disabled):before {\r\n      border-bottom: 1px solid ${({ theme }) => theme.alpha};\r\n    }\r\n\r\n    .MuiList-root{\r\n      background-color: ${({ theme }) => theme.gamma};\r\n    }\r\n  }\r\n\r\n  .Resizer {\r\n    background-color: ${({ theme }) => theme.divider};\r\n  }\r\n\r\n`;\r\n","import FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Switch, { SwitchClassKey, SwitchProps } from '@material-ui/core/Switch';\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { OPTIONS } from '~/app/constants/options.constant';\r\nimport { darkTheme } from '~/app/constants/theme.constant';\r\n\r\ninterface Styles extends Partial<Record<SwitchClassKey, string>> {\r\n  focusVisible?: string;\r\n}\r\n\r\ninterface Props extends SwitchProps {\r\n  classes: Styles;\r\n}\r\n\r\nconst BlueSwitch = withStyles({\r\n  switchBase: {\r\n    color: `${darkTheme.psi}`,\r\n    '&$checked': {\r\n      color: `${darkTheme.psi}`\r\n    },\r\n    '&$checked + $track': {\r\n      backgroundColor: `${darkTheme.psi}`\r\n    }\r\n  },\r\n  checked: {},\r\n  track: {}\r\n})(Switch);\r\n\r\nexport default function Toggle({ theme, toggleTheme }: any) {\r\n  let isChecked = false;\r\n  const { t } = useTranslation();\r\n\r\n  if (theme === OPTIONS.themes.light) {\r\n    isChecked = true;\r\n  }\r\n\r\n  const [state, setState] = React.useState({\r\n    checkedA: isChecked,\r\n    checkedB: isChecked,\r\n    checkedC: isChecked\r\n  });\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setState({ ...state, [event.target.name]: event.target.checked });\r\n    toggleTheme();\r\n  };\r\n\r\n  return (\r\n    <FormGroup>\r\n      <FormControlLabel\r\n        control={<BlueSwitch checked={state.checkedA} onChange={handleChange} name=\"checkedA\" />}\r\n        label={t('settings.general.lightTheme')}\r\n      />\r\n    </FormGroup>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport { OPTIONS } from '~/app/constants/options.constant';\r\nimport { darkTheme, lightTheme } from '~/app/constants/theme.constant';\r\nimport { ThemifiedStyles } from '~/styles/styledComponents/dynamicStyles';\r\nimport Toggle from './Toggle';\r\nimport useThemes from './useThemes';\r\n\r\nexport default function ToggleTheme() {\r\n  const [theme, toggleTheme] = useThemes();\r\n  const themeMode = theme === OPTIONS.themes.light ? lightTheme : darkTheme;\r\n\r\n  return (\r\n    <ThemeProvider theme={themeMode}>\r\n      <ThemifiedStyles />\r\n      <Toggle theme={theme} toggleTheme={toggleTheme} />\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","import { loader } from '@monaco-editor/react';\nimport { useEffect, useState } from 'react';\nimport { OPTIONS } from '~/app/constants/options.constant';\nimport { getStorage, setStorage } from '~/app/helpers/options.helper';\n\nexport default function useThemes() {\n  const [theme, setTheme] = useState(getStorage(OPTIONS.themes.storage) || OPTIONS.themes.dark);\n\n  const toggleEditorTheme = () => {\n    loader.init().then((monaco) => {\n      if (theme === OPTIONS.themes.light) {\n        monaco.editor.setTheme(OPTIONS.themes.darkTheme);\n      } else {\n        monaco.editor.setTheme(OPTIONS.themes.lightTheme);\n      }\n    });\n  };\n\n  const toggleTheme = () => {\n    if (theme === OPTIONS.themes.light) {\n      setStorage(OPTIONS.themes.storage, OPTIONS.themes.dark);\n      setTheme(OPTIONS.themes.dark);\n      toggleEditorTheme();\n    } else {\n      setStorage(OPTIONS.themes.storage, OPTIONS.themes.light);\n      setTheme(OPTIONS.themes.light);\n      toggleEditorTheme();\n    }\n  };\n\n  useEffect(() => {\n    const localTheme = getStorage(OPTIONS.themes.storage);\n    localTheme && setTheme(localTheme);\n  }, []);\n\n  return [theme, toggleTheme];\n}\n","import Slide from '@material-ui/core/Slide';\r\nimport React, { MutableRefObject, useRef, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { visibleSettingsRef } from '../../sidebar/OpenSettings';\r\nimport FontSize from './fontSize/FontSize';\r\nimport IndentSize from './indentSize/IndentSize';\r\nimport Language from './localization/Language';\r\nimport ToggleTheme from './themes/ToggleTheme';\r\n\r\nexport let setVisibleSettingsRef: MutableRefObject<React.Dispatch<boolean>> | null = null;\r\n\r\nexport default function Explorer() {\r\n  const { t } = useTranslation();\r\n  const [visible, setVisible] = useState(visibleSettingsRef.current);\r\n\r\n  setVisibleSettingsRef = useRef(setVisible);\r\n\r\n  return (\r\n    <Slide direction=\"right\" in={visible}>\r\n      <div className=\"settings\" style={{ display: visible ? 'flex' : 'none' }}>\r\n        <div className=\"settings__header\">\r\n          <div className=\"settings__inner\">\r\n            <h3 className=\"settings__title\">{t('settings.title')}</h3>\r\n          </div>\r\n        </div>\r\n        <div className=\"settings__content\">\r\n          <ul className=\"settings__list\">\r\n            <li className=\"settings__item\">\r\n              <h4 className=\"settings__item-title\"> {t('settings.general.title')}</h4>\r\n              <ul className=\"settings__sublist\">\r\n                <li className=\"settings__subitem\">\r\n                  <ToggleTheme />\r\n                </li>\r\n                <li className=\"settings__subitem\">\r\n                  <Language />\r\n                </li>\r\n              </ul>\r\n            </li>\r\n            <li className=\"settings__item\">\r\n              <h4 className=\"settings__item-title\">{t('settings.editor.title')}</h4>\r\n              <ul className=\"settings__sublist\">\r\n                <li className=\"settings__subitem\">\r\n                  <FontSize />\r\n                </li>\r\n                <li className=\"settings__subitem\">\r\n                  <IndentSize />\r\n                </li>\r\n              </ul>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </Slide>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Settings from './settings/Settings';\r\n\r\nexport default function Panels() {\r\n  return (\r\n    <>\r\n      <Settings />\r\n    </>\r\n  );\r\n}\r\n","import { createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n        minWidth: '30rem'\r\n      }\r\n    }\r\n  })\r\n);\r\n\r\nexport default function BasicTextFields() {\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <form className={classes.root} noValidate autoComplete=\"off\">\r\n      <TextField\r\n        id=\"standard-basic\"\r\n        label={t('sidebar.share.label')}\r\n        value={window.location.href}\r\n        InputProps={{\r\n          style: {\r\n            fontSize: '1.8rem'\r\n          },\r\n          readOnly: true\r\n        }}\r\n        InputLabelProps={{\r\n          style: {\r\n            fontSize: '2rem'\r\n          }\r\n        }}\r\n      />\r\n    </form>\r\n  );\r\n}\r\n","import { makeStyles } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ShareIcon from '@material-ui/icons/Share';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport GrayTooltip from '../common/CommonTooltip';\nimport LinkField from './LinkField';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      margin: 0,\n      padding: theme.spacing(2)\n    },\n    closeButton: {\n      position: 'absolute',\n      right: theme.spacing(1),\n      top: theme.spacing(1),\n      color: theme.palette.grey[500]\n    }\n  });\n\nconst useStyles = makeStyles({\n  copyButton: {\n    fontSize: '1.7rem'\n  }\n});\n\nexport interface DialogTitleProps extends WithStyles<typeof styles> {\n  id: string;\n  children: React.ReactNode;\n  onClose: () => void;\n}\n\nconst DialogTitle = withStyles(styles)((props: DialogTitleProps) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h4\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme: Theme) => ({\n  root: {\n    padding: theme.spacing(2)\n  }\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme: Theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1)\n  }\n}))(MuiDialogActions);\n\nexport default function ShareLink() {\n  const { t } = useTranslation();\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const copyUrl = () => {\n    navigator.clipboard.writeText(window.location.toString());\n  };\n\n  const classes = useStyles();\n\n  return (\n    <div className=\"sidebar__item\">\n      <button className=\"sidebar__btn\" onClick={handleClickOpen}>\n        <GrayTooltip title={t('tooltips.sidebar.share')} arrow>\n          <ShareIcon style={{ fontSize: 30 }} />\n        </GrayTooltip>\n      </button>\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n          {t('sidebar.share.title')}\n        </DialogTitle>\n        <DialogContent dividers>\n          <LinkField />\n        </DialogContent>\n        <DialogActions>\n          <Button\n            className={classes.copyButton}\n            autoFocus\n            onClick={() => {\n              copyUrl();\n              handleClose();\n            }}\n            color=\"primary\"\n          >\n            {t('sidebar.share.btn')}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from 'react';\r\nimport OpenSettings from './OpenSettings';\r\nimport ShareLink from './ShareLink';\r\n\r\nexport default function Sidebar() {\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <ShareLink />\r\n      <OpenSettings />\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\n\nexport default function useStorage(storageName: string, defaultVal: string) {\n  const [value, setValue] = useState(() => {\n    const projectJson = localStorage.getItem(storageName);\n\n    if (projectJson !== null) return JSON.parse(projectJson);\n\n    return defaultVal;\n  });\n\n  useEffect(() => {\n    localStorage.setItem(storageName, JSON.stringify(value));\n  }, [storageName, value]);\n\n  return [value, setValue];\n}\n","import React, { useEffect, useState } from 'react';\r\nimport { SplitPane } from 'react-multi-split-pane';\r\nimport { PROJECT } from '~/app/constants/project.constant';\r\nimport Console from './console/Console';\r\nimport CodeEditor from './editor/CodeEditor';\r\nimport { BUTTONS } from './editor/example/buttons';\r\nimport Header from './header/Header';\r\nimport Iframe from './iframe/Iframe';\r\nimport Info from './info/Info';\r\nimport Panels from './panels/Panels';\r\nimport Sidebar from './sidebar/Sidebar';\r\nimport useStorage from './useStorage';\r\n\r\nexport default function Project() {\r\n  const [html, setHtml] = useStorage(PROJECT.html.storage, BUTTONS.html);\r\n  const [css, setCss] = useStorage(PROJECT.css.storageName, BUTTONS.css);\r\n  const [js, setJs] = useStorage(PROJECT.js.storage, BUTTONS.js);\r\n  const [srcDoc, setSrcDoc] = useState('');\r\n\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      setSrcDoc(`\r\n        <html>\r\n          <body>${html}</body>\r\n          <style>${css}</style>\r\n          <script>${js}</script>\r\n        </html>\r\n      `);\r\n    }, 500);\r\n\r\n    return () => clearTimeout(timeout);\r\n  }, [html, css, js]);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"content\">\r\n        <Sidebar />\r\n        <Panels />\r\n        <div className=\"content__inner\">\r\n          <SplitPane split=\"horizontal\" defaultSizes={[65, 34, 1]} minSize={[30, 4, 30]}>\r\n            <div className=\"pane-input\">\r\n              <SplitPane split=\"vertical\" minSize={52}>\r\n                <CodeEditor language=\"html\" value={html} onChanged={setHtml} displayingName=\"html\" />\r\n                <CodeEditor language=\"css\" value={css} onChanged={setCss} displayingName=\"css\" />\r\n                <CodeEditor language=\"javascript\" value={js} onChanged={setJs} displayingName=\"js\" />\r\n              </SplitPane>\r\n            </div>\r\n            <Iframe srcDoc={srcDoc} />\r\n            <Console output={js} />\r\n          </SplitPane>\r\n        </div>\r\n      </div>\r\n      <Info />\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport '../styles/scss/style.scss';\r\nimport Home from './components/home/Home';\r\nimport Page404 from './components/Page404';\r\nimport Project from './components/project/Project';\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"page\">\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Home} />\r\n          <Route path=\"/project\" component={Project} />\r\n          <Route component={Page404} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n","import i18n from 'i18next';\r\nimport { OPTIONS } from '../constants/options.constant';\r\nimport { getStorage } from '../helpers/options.helper';\r\n\r\ni18n.init({\r\n  lng: getStorage(OPTIONS.settings.language.storage) || 'en-EN',\r\n  fallbackLng: 'en',\r\n  ns: ['translations'],\r\n  defaultNS: 'translations',\r\n  interpolation: {\r\n    escapeValue: false,\r\n    formatSeparator: ','\r\n  },\r\n  returnObjects: true,\r\n  react: {\r\n    wait: true\r\n  },\r\n  resources: {\r\n    en: {\r\n      translations: {\r\n        slogan: {\r\n          code: 'Code',\r\n          create: 'Create',\r\n          collaborate: 'Share'\r\n        },\r\n        descrip: 'HTML, CSS, JS Online Code Editor',\r\n        startDialog: {\r\n          start: 'Start coding',\r\n          getStarted: 'Get Started',\r\n          title: 'Project title',\r\n          language: 'Language',\r\n          create: 'Create project'\r\n        },\r\n        tooltips: {\r\n          sidebar: {\r\n            compile: 'Compile',\r\n            explorer: 'Explorer',\r\n            share: 'Share',\r\n            settings: 'Settings'\r\n          },\r\n          menu: {\r\n            explorer: {\r\n              newFile: 'New File',\r\n              newFolder: 'New Folder'\r\n            }\r\n          }\r\n        },\r\n        sidebar: {\r\n          share: {\r\n            title: 'Share',\r\n            label: 'Shareable Link',\r\n            btn: 'Copy link'\r\n          }\r\n        },\r\n        explorer: {\r\n          title: 'Explorer'\r\n        },\r\n        settings: {\r\n          title: 'Settings',\r\n          general: {\r\n            title: 'General',\r\n            lightTheme: 'Light theme',\r\n            lang: 'Language'\r\n          },\r\n          editor: {\r\n            title: 'Editor',\r\n            fontSize: {\r\n              title: 'Font size',\r\n              variants: {\r\n                small: 'small',\r\n                normal: 'normal',\r\n                large: 'large',\r\n                huge: 'huge'\r\n              }\r\n            },\r\n            indentSize: {\r\n              title: 'Indent size'\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    ru: {\r\n      translations: {\r\n        slogan: {\r\n          code: 'Программируйте',\r\n          create: 'Создавайте',\r\n          collaborate: 'Делитесь'\r\n        },\r\n        descrip: 'Онлайн-редактор для HTML, CSS, JS',\r\n        startDialog: {\r\n          start: 'Начать работу',\r\n          getStarted: 'Начать',\r\n          language: 'Язык',\r\n          create: 'Создать проект',\r\n          title: 'Название проекта'\r\n        },\r\n        tooltips: {\r\n          sidebar: {\r\n            compile: 'Компилировать',\r\n            explorer: 'Файлы',\r\n            share: 'Поделиться',\r\n            settings: 'Настройки'\r\n          },\r\n          menu: {\r\n            explorer: {\r\n              newFile: 'Создать файл',\r\n              newFolder: 'Создать папку'\r\n            }\r\n          }\r\n        },\r\n        sidebar: {\r\n          share: {\r\n            title: 'Поделиться ссылкой',\r\n            label: 'Ссылка общего доступа',\r\n            btn: 'Копировать'\r\n          }\r\n        },\r\n        explorer: {\r\n          title: 'Файлы'\r\n        },\r\n        settings: {\r\n          title: 'Настройки',\r\n          general: {\r\n            title: 'Общие',\r\n            lightTheme: 'Светлая тема',\r\n            lang: 'Язык'\r\n          },\r\n          editor: {\r\n            title: 'Редактор',\r\n            fontSize: {\r\n              title: 'Размер шрифта',\r\n              variants: {\r\n                small: 'маленький',\r\n                normal: 'нормальный',\r\n                large: 'большой',\r\n                huge: 'огромный'\r\n              }\r\n            },\r\n            indentSize: {\r\n              title: 'Размер отступа'\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    uk: {\r\n      translations: {\r\n        slogan: {\r\n          code: 'Програмуйте',\r\n          create: 'Створюйте',\r\n          collaborate: `Ділитись`\r\n        },\r\n        descrip: 'Онлайн-редактор для HTML, CSS, JS',\r\n        startDialog: {\r\n          start: 'Почати роботу',\r\n          getStarted: 'Почати',\r\n          language: 'Мова',\r\n          create: 'Створити проект',\r\n          title: 'Назва проекту'\r\n        },\r\n        tooltips: {\r\n          sidebar: {\r\n            compile: 'Компілювати',\r\n            explorer: 'Файли',\r\n            share: 'Поділитися',\r\n            settings: 'Налаштування'\r\n          },\r\n          menu: {\r\n            explorer: {\r\n              newFile: 'Створити файл',\r\n              newFolder: 'Створити папку'\r\n            }\r\n          }\r\n        },\r\n        sidebar: {\r\n          share: {\r\n            title: 'Поділитися посиланням',\r\n            label: 'Посилання загального доступу',\r\n            btn: 'Копіювати'\r\n          }\r\n        },\r\n        explorer: {\r\n          title: 'Файли'\r\n        },\r\n        settings: {\r\n          title: 'Налаштування',\r\n          general: {\r\n            title: 'Загальні',\r\n            lightTheme: 'Світла тема',\r\n            lang: 'Мова'\r\n          },\r\n          editor: {\r\n            title: 'Редактор',\r\n            fontSize: {\r\n              title: 'Розмір шрифту',\r\n              variants: {\r\n                small: 'маленький',\r\n                normal: 'нормальний',\r\n                large: 'великий',\r\n                huge: 'величезний'\r\n              }\r\n            },\r\n            indentSize: {\r\n              title: 'Розмір відступу'\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nexport default i18n;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { I18nextProvider } from 'react-i18next';\r\nimport 'reflect-metadata';\r\nimport App from './app/App';\r\nimport i18n from './app/localization/i18n';\r\n\r\nReactDOM.render(\r\n  <I18nextProvider i18n={i18n}>\r\n    <App />\r\n  </I18nextProvider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}